webpackJsonp([29],{1839:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),s(1840)},1840:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=s(1841),r=function(){function e(t,s,i,r,a,n,o,c,l,h,p,d,u,g,v,C,y,m,f,b,S,O){var R=this;if(this.$element=t,this.$scope=s,this.$q=i,this.$timeout=r,this.$translate=a,this.appConfig=n,this.routeUtilityService=o,this.conversationsService=c,this.newChatService=l,this.loggingService=h,this.peopleService=p,this.constants=d,this.navigationService=u,this.settingsService=g,this.eventingService=v,this.dialogService=C,this.ariaLiveService=y,this.resources=m,this.p2pFilesStore=f,this.filesActionsFactory=b,this.filesProviderFactory=S,this.platformDetectService=O,this.isEscDisabled=!0,this.isBotSearchEnabled=!0,this.selectedRecipients=[],this.allSelectedRecipientsMris=[],this.chatHistoryOptionNo="no",this.chatHistoryOptionAll="all",this.chatHistoryOptionCustom="custom",this.isSharingChatHistoryEnabled=!1,this.chatHistoryOption=this.chatHistoryOptionNo,this.chatHistoryNumberOfDays=1,this.hasReachedMaxNumOfRecipients=!1,this.hasBotInGroupChat=!1,this.isInvalidChatHistoryOption=!1,this.disableCompose=!1,this.logger=this.loggingService.newLogger("chat-people-picker"),this.enableShareChatHistory=!0,!this.settingsService.valueAsBoolean(this.constants.settings.names.disablePerfTableLogging))var k=this.loggingService.newCounter(this.constants.counters.newChatInitialMembers);this.enableBlockBotInNewGroupChat=g.valueAsBoolean(this.constants.settings.names.enableBlockBotInNewGroupChat),this.doNotDisableMeetingChats=g.valueAsBoolean(this.constants.settings.names.doNotDisableMeetingChatIfChatsDisabled),this.isNativeP2PFederatedchatEnabled=g.valueAsBoolean(this.constants.settings.names.enableNativeP2PFederatedChats),this.unknownUserName=a.instant(this.resources.strings.chat_unknownUserDefaultName),this.invalidChatHistoryOptionSelectedError=this.$translate.instant(this.resources.strings.chat_invalidChatHistoryOptionSelectedError),this.invalidChatHistoryOptionSelectedErrorResolved=this.$translate.instant(this.resources.strings.chat_invalidChatHistoryOptionSelectedErrorResolved);var H=this.routeUtilityService.getRootRouteParams(),E=this.conversationsService.getConversation(H&&H.peopleSlug),N=E&&E.isMeetingConversation();if(e.MaxRosterSizeInChat=N?this.appConfig.chatConstants.maxRosterSizeInPrivateMeetingChat:this.appConfig.chatConstants.maxRosterSizeInGroupChat,this.selectedRecipients=[],this.maxRosterSizeError=N?this.$translate.instant(this.resources.strings.chat_privateMeetingErrorTooManyUsersInfo):this.$translate.instant(this.resources.strings.chat_updateErrorTooManyUsersInfo,{maxChatSize:e.MaxRosterSizeInChat}),this.existingChatRecipients?1===this.existingChatRecipients.length&&k&&k.mark("populate_from_updatedChat"):(this.existingChatRecipients=[],N||(this.maxRosterSizeError=this.$translate.instant(this.resources.strings.chat_creationErrorTooManyUsersInfo,{maxChatSize:e.MaxRosterSizeInChat})),k&&k.mark("populate_from_newChat"),this.populateNewChatRecipients()),this.setShareChatHistoryEnabled(),this.enableShareChatHistory&&(this.chatHistoryCustomInputNarration=this.$translate.instant(this.resources.strings.chat_history_return_to_options_instructions)),this.isInvalidChatHistoryOption=this.isInvalidChatHistoryOptionSelected(),k){var I=_.map(this.selectedRecipients,function(e){R.recipientIsConversation(e)?e.id:e.mri}).join(", ");k.mark("initial_recipients_set",{data:"length: "+(this.selectedRecipients&&this.selectedRecipients.length)+", recipients: "+I})}k&&k.stop(),this.chatFilter=[d.contact.contactType.NonADUser,d.contact.contactType.DistributionList,d.contact.contactType.Channel],this.newChatService.safeSubscribe(this.$scope,function(){R.resetRecipients(),R.setToLineReadOnlyProperty(!1),R.setPlaceholder()},teamspace.services.NewChatServiceEvents.EventType_DeleteNewChat),this.newChatService.safeSubscribe(this.$scope,function(){R.resetRecipients()},teamspace.services.NewChatServiceEvents.EventType_ResetChatPeoplePicker),this.newChatService.safeSubscribe(this.$scope,function(e,t){R.setToLineReadOnlyProperty(!1),t||R.focusElement()},teamspace.services.NewChatServiceEvents.EventType_ResetChatPeoplePickerReadOnlyProperty),this.newChatService.safeSubscribe(this.$scope,function(){return R.focusElement()},teamspace.services.NewChatServiceEvents.EventType_FocusOnToLine),this.setPlaceholder(),this.newChatService.safeSubscribe(this.$scope,function(){R.setPlaceholder(),R.enableBlockBotInNewGroupChat&&R.reevaluateBotSearchEnabled()},teamspace.services.NewChatServiceEvents.EventType_ReevaluateAllowedRecipients),this.focusOnInit&&this.focusElement(),this.registerFocusCallback&&this.registerFocusCallback({callback:function(){R.focusElement()}}),this.p2pListenerRegistration=this.p2pFilesStore.register({onStateChanged:function(e){}},s),this.filesActions=this.filesActionsFactory.create(this.p2pListenerRegistration.getId()),this.setToLineReadOnlyProperty(!1);var $=this.$timeout(function(){R.updateDialogState()},null,!1);this.$scope.$on("$destroy",function(){R.$element=null,R.$timeout.cancel($),R.logger.info("calling destroy of chat people picker"),R.focusableElement&&R.focusableElement.off("focus")})}return e.$inject=["$element","$scope","$q","$timeout","$translate","appConfig","routeUtilityService","conversationsService","newChatService","loggingService","peopleService","constants","navigationService","settingsService","eventingService","dialogService","ariaLiveService","resources","p2pFilesStore","filesActionsFactory","filesProviderFactory","platformDetectService"],e.prototype.setShareChatHistoryEnabled=function(){if(this.enableShareChatHistory){var e=!1,t=this.routeUtilityService.getRootRouteParams();if(this.id=t&&t.peopleSlug,this.id?this.existingChatRecipients.length>0&&(e=SkypeX.Services.SkypeConversationLocal.isLie(this.id)):this.logger.error("the people slug is invalid"),this.hideShareHistoryOptions)this.isSharingChatHistoryEnabled=!1;else{var s=this.id&&!SkypeX.Services.ChatServiceUtils.isMri(this.id)?this.conversationsService.getConversation(this.id):null;this.isSharingChatHistoryEnabled=!!s&&!e&&!s.isOneOnOne()}this.enableShareChatHistory=this.enableShareChatHistory&&this.isSharingChatHistoryEnabled}},e.prototype.recipientIsConversation=function(e){return e&&e instanceof teamspace.services.ChatConversation},e.prototype.focusElement=function(){var e=this;this.$timeout(function(){e.focusableElement||(e.focusableElement=e.$element.find("input"),e.focusableElement?e.focusableElement.on("focus",function(t){e.onFocusCallback&&e.onFocusCallback()}):e.logger.error('Unable to find "input" element to focus on')),e.focusableElement&&e.focusableElement.focus()})},e.prototype.populateNewChatRecipients=function(){var e,t=this.newChatService.getNewChat();t&&(t.recipientChats&&t.recipientChats.length>0?this.selectedRecipients=t.recipientChats:this.selectedRecipients=_.uniq((e=teamspace.services.ChatConversationMemberConverter).toUsers.apply(e,t.otherMembers)))},Object.defineProperty(e.prototype,"maxSharedNumberDays",{get:function(){return 999},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minSharedNumberDays",{get:function(){return 1},enumerable:!0,configurable:!0}),e.prototype.chatCustomDaysInputClicked=function(e){this.setChatHistoryFocusAndValue(this.chatHistoryOptionCustom,e),e&&e.stopPropagation()},e.prototype.setChatHistoryValue=function(e){this.chatHistoryOption=e},e.prototype.setChatHistoryFocusAndValue=function(e,t){var s=angular.element("#chat-history-option-"+e),i=angular.element("#chat-history-option-"+this.chatHistoryOption);this.setChatHistoryValue(e),i.get(0).id.contains("chat-history-option")&&(i.attr("tabindex","-1"),i.attr("checked","false"),i.attr("aria-checked","false")),s.attr("tabindex","0"),s.attr("checked","true"),s.attr("aria-checked","true");var r=t&&t.target&&angular.element(t.target);r&&r[0]&&"input"===r[0].tagName.toLowerCase()?(r.is(":disabled")&&r.prop("disabled",!1),r.focus()):s.focus()},e.prototype.validateChatHistoryValue=function(){var e=this.isInvalidChatHistoryOption;this.isInvalidChatHistoryOption=this.isInvalidChatHistoryOptionSelected(),e!==this.isInvalidChatHistoryOption&&this.ariaLiveService.update(this.isInvalidChatHistoryOption?this.invalidChatHistoryOptionSelectedError:this.invalidChatHistoryOptionSelectedErrorResolved,!0)},e.prototype.isAddButtonDisabled=function(){return!this.existingChatRecipients||this.existingChatRecipients.length>=e.MaxRosterSizeInChat||this.selectedRecipients.length+this.existingChatRecipients.length>e.MaxRosterSizeInChat||0===this.selectedRecipients.length||this.disableCompose||this.isInvalidChatHistoryOptionSelected()},e.prototype.updateDialogState=function(){this.hasReachedMaxNumOfRecipients=this.hasReachedMax(!0),this.hasBotInGroupChat=this.hasBotInNewGroupChat(),this.updateBotSearchEnabled(),this.updateIsChatDisabledStatus(),this.enableBlockBotInNewGroupChat&&this.isBotSelectedAsFirstRecipient()&&this.setToLineReadOnlyProperty(!0)},e.prototype.isBotSelectedAsFirstRecipient=function(){var e=!1;if(this.selectedRecipients&&this.selectedRecipients.length>0){var t=this.selectedRecipients[0];e=!this.recipientIsConversation(t)&&t.type==this.constants.bots.botType}return e},e.prototype.isInvalidChatHistoryOptionSelected=function(){return this.enableShareChatHistory&&this.chatHistoryOption!==this.chatHistoryOptionAll&&this.chatHistoryOption!==this.chatHistoryOptionNo&&!this.isChatHistoryNumberOfDaysValid()},e.prototype.isChatHistoryNumberOfDaysValid=function(){return _.isNumber(this.chatHistoryNumberOfDays)&&this.chatHistoryNumberOfDays>=this.minSharedNumberDays&&this.chatHistoryNumberOfDays<=this.maxSharedNumberDays},e.prototype.updateIsChatDisabledStatus=function(){var e=this;this.didFederatedUserResolutionFail()?(this.notifyChatDisabledMessage=this.getfederatedUserResolutionErrorMessage(this.selectedRecipients[0]),this.disableCompose=!0,this.onDisableComposeCallback&&(this.onDisableComposeCallback({msg:this.notifyChatDisabledMessage,cannotResolveUser:!0}),this.ariaLiveService.update(this.notifyChatDisabledMessage))):this.isChatDisabled()&&(this.disableCompose=!0,this.notifyChatDisabledMessage=null,this.allSelectedRecipientsMris=this.getSelectedRecipientsMris(),this.peopleService.getAllLatestPeopleProfile(this.allSelectedRecipientsMris,"chat-people-picker",!1).then(function(t){e.disableCompose=SkypeX.Services.ChatServiceUtils.isChatDisabledForGroup(t),e.disableCompose&&(e.notifyChatDisabledMessage=e.disableComposeBoxForChatPlaceholder(t),e.ariaLiveService.update(e.notifyChatDisabledMessage)),e.onDisableComposeCallback&&e.onDisableComposeCallback({msg:e.notifyChatDisabledMessage,cannotResolveUser:!1})},function(t){e.logger.error("getAllLatestPeopleProfile - failed getting the data from people service")}))},e.prototype.didFederatedUserResolutionFail=function(){var e=this.selectedRecipients&&1===this.selectedRecipients.length&&!this.recipientIsConversation(this.selectedRecipients[0])&&this.selectedRecipients[0];return!!(this.isNativeP2PFederatedchatEnabled&&e&&e.isFederated&&teamspace.services.SfBInteropUtilsService.isTemporaryFederationUserMri(e.mri)&&e.fetchErrorCode)},e.prototype.isChatDisabled=function(){var e=this.conversationsService.getConversation(this.id),t=e&&e.isFederated(),s=e&&e.isMeetingConversation();return!(t||s&&this.doNotDisableMeetingChats)},e.prototype.getSelectedRecipientsMris=function(){var e=this,t=[];return this.selectedRecipients.forEach(function(s){var i;e.recipientIsConversation(s)?t=t.concat((i=teamspace.services.ChatConversationMemberConverter).toUsers.apply(i,s.otherMembers)):t.push(s)}),_.map(t,function(e){if(!angular.isUndefined(e.mri))return e.mri})},e.prototype.disableComposeBoxForChatPlaceholder=function(e){var t=SkypeX.Services.ChatServiceUtils.getChatDisabledUsers(e);return null==t?"":1===t.length?this.$translate.instant(this.resources.strings.messages_placeholderMessage_disabled_chat_group_one,{targetOne:t[0]&&t[0].displayName||this.unknownUserName}):2===t.length?this.$translate.instant(this.resources.strings.messages_placeholderMessage_disabled_chat_group_two,{targetOne:t[0]&&t[0].displayName||this.unknownUserName,targetTwo:t[1]&&t[1].displayName||this.unknownUserName}):t.length>2?this.$translate.instant(this.resources.strings.messages_placeholderMessage_disabled_chat_group_3more,{targetOne:t[0]&&t[0].displayName||this.unknownUserName,targetCount:t.length-1}):void 0},e.prototype.getfederatedUserResolutionErrorMessage=function(e){switch(e.fetchErrorCode){case this.constants.errorCodes.notFound:return this.$translate.instant(this.resources.strings.federated_failed_chat_header_user_not_found,{email:e.displayName});case this.constants.errorCodes.forbidden:return this.$translate.instant(this.resources.strings.federated_failed_chat_header_forbidden);default:return this.$translate.instant(this.resources.strings.federated_failed_chat_header_info)}},e.prototype.hasReachedMax=function(t){var s=this;void 0===t&&(t=!1);var i,r=[],a=[];if(this.selectedRecipients){this.selectedRecipients.forEach(function(e){s.recipientIsConversation(e)?(r=r.concat(e.otherMembers),a.push(e)):r.push(e)}),i=(r?r.length:0)+(this.existingChatRecipients?this.existingChatRecipients.length:0)>e.MaxRosterSizeInChat;var n=a&&a.length>0;t&&this.setToLineReadOnlyProperty(n||i)}else i=!1;return i},e.prototype.setToLineReadOnlyProperty=function(e){void 0===e&&(e=!1);var t=this.focusableElement||this.$element.find("input[data-tid='peoplePicker']");return t&&t.length>0&&t[0]&&(t[0].readOnly=e,e&&t.blur()),!1},e.prototype.hasBotInNewGroupChat=function(){var e=this;if(this.existingChatRecipients&&0===this.existingChatRecipients.length&&this.selectedRecipients&&this.selectedRecipients.length>1){var t=_.keys(this.settingsService.valueFor(this.constants.settings.names.botsAllowedForMedia)),s=this.selectedRecipients.some(function(t){return t&&!e.recipientIsConversation(t)&&t.type===e.constants.bots.botType}),i=this.selectedRecipients.some(function(s){return s&&!e.recipientIsConversation(s)&&t.includes(s.mri)});return s&&!i}return!1},e.prototype.addMembersToChat=function(){var e=this,t=!1,s=this.routeUtilityService.getRootRouteParams(),i=s?s.peopleSlug:null,r=SkypeX.Services.ChatServiceUtils.isMri(i),a=i&&this.conversationsService.getCorrespondingConversation(i);if(a||r){var n=r||a&&a.isOneOnOne();n&&this.selectedRecipients.push(this.otherChatRecipient);var o,c=[],l=[],h=[],p={};if(_.forEach(this.selectedRecipients,function(t){var s=!1;return e.recipientIsConversation(t)?(s=!0,_.forEach(t.otherMembers,function(t){return o=e.processRecipient(c,l,h,p,t&&{mri:t.mri,upn:t.upn||t.nameHint&&t.nameHint.upn,displayName:t.nameHint&&t.nameHint.displayName}),s=!o}),s):(o=e.processRecipient(c,l,h,p,t&&{mri:t.mri,upn:t.userPrincipalName,displayName:t.displayName}),s=!o)}),!o)if(_.isEmpty(l))o=this.$q.resolve(c);else{if(!t){var d=this.$translate.instant(this.resources.strings.chat_provisioningWaitingForUsers);this.onBegin({message:d}),t=!0}o=this.addMissingMris(l,c,p)}o.then(function(t){try{if(n){if(!(t.length>1))throw e.logger.error("in 1:1 chat expected 1 resolved mri, but received 0 from peopleService"),e.constants.prependedErrorMessages.tooFewUsers+t.length;var s=e.conversationsService.getChatConversationWith(t);e.setToLineReadOnlyProperty(!1),e.navigationService.navigate(e.$scope,e.constants.states.appConversation,{slug:s.id,middlePane:e.constants.messages.panes.conversations,ctx:e.constants.navigation.context.chat,navCtx:"chat-people-picker"})}else{var r=_.difference(t,_.map(e.existingChatRecipients,function(e){return e.mri}));if(e.enableShareChatHistory){var a=e.loggingService.newCounter(e.constants.counters.addRecipientsToGroupChat,{conversationId:i,recipientMris:r.join(", ")}),o=-1;if(e.chatHistoryOption===e.chatHistoryOptionAll)o=0;else if(e.chatHistoryOption===e.chatHistoryOptionNo)o=-1;else{if(e.isInvalidChatHistoryOptionSelected())return a.shareHistoryTime=o,void a.fail({error:"add_recipient_to_group_chat_error",errorInfo:"Invalid Share Chat History option selected"});o=new Date(Date.now()-24*e.chatHistoryNumberOfDays*3600*1e3).getTime()}a.shareHistoryTime=o,e.conversationsService.addUsersToConversation(i,r,o).then(function(){a.mark("add_recipients_to_group_chat_succeeded"),a.stop()},function(t){a.fail({error:"add_recipients_to_group_chat_error",errorInfo:t&&t.message?t.message:""}),e.eventingService.$emit(e.constants.events.messages.messageActionError,{errorMessage:e.$translate.instant(e.resources.strings.chats_addGroupChat_unknownError),conversationId:i})}),e.ariaLiveService.update(e.$translate.instant(e.resources.strings.aria_groupChat_participants_added_mf,{numParticipants:r.length}))}else e.conversationsService.addUsersToConversation(i,r).then(function(){e.ariaLiveService.update(e.$translate.instant(e.resources.strings.aria_groupChat_participants_added_mf,{numParticipants:r.length}))},function(){e.eventingService.$emit(e.constants.events.messages.messageActionError,{errorMessage:e.$translate.instant(e.resources.strings.chats_addGroupChat_unknownError),conversationId:i})})}e.setToLineReadOnlyProperty(!1),e.giveFileSharingPermissions(h,i);var c=e.newChatService.getOpenDialogResult();e.dialogService.close(c&&c.id,!0),e.focusInEditorOnAdd()}catch(t){e.logger.warn(t),t&&""!==t?t.indexOf(e.constants.prependedErrorMessages.tooFewUsers)>=0?t=e.$translate.instant(e.resources.strings.chat_creationErrorTooFewUsers):t.indexOf(e.constants.prependedErrorMessages.oneMoreUser)>=0?t=e.$translate.instant(e.resources.strings.chat_creationErrorNeedOneMoreUserForGroup):t.indexOf(e.constants.prependedErrorMessages.twoMoreUsers)>=0&&(t=e.$translate.instant(e.resources.strings.chat_creationErrorNeedTwoMoreUsersForGroup)):t=e.$translate.instant(e.resources.strings.chat_provisioningDefaultError),e.onError({message:t})}},function(t){e.onError({message:t})})}else{this.logger.warn("Cannot get conversation for conversationId {0}",i),this.setToLineReadOnlyProperty(!1);var u=this.$translate.instant(this.resources.strings.chat_provisioningDefaultError);this.logger.warn(u),this.onError({message:u})}},e.prototype.addMissingMris=function(e,t,s){var i=this;return this.peopleService.getAllPeopleProfile(e,"chat-people-picker").then(function(r){_.isEmpty(r)&&(r=[null]);var a;return _.forEach(r,function(r,n){if(!r||!r.mri){i.logger.warn("User "+n+" in chat creation missing mri");var o=r&&r.displayName;return!o&&s&&(o=s[t[n]]||s[e[n]]),a=i.rejectionMessageForUserName(o),!1}t.push(r.mri)}),a?i.$q.reject(a):t},function(e){var t=i.$translate.instant(i.resources.strings.chat_provisioningDefaultError);return e&&""!==e&&(t=e.message||e),i.$q.reject(t)})},e.prototype.processRecipient=function(e,t,s,i,r){var a;if(r){if(r.mri?e.push(r.mri):t.push(r.upn),!angular.isUndefined(r.upn)&&r.upn.length>0&&s.push(r.upn),i&&r.displayName){var n=r.mri||r.upn;n&&(i[n]=r.displayName)}}else a=this.$q.reject(this.rejectionMessageForUserName(null));return a},e.prototype.rejectionMessageForUserName=function(e){var t=e||this.$translate.instant(this.resources.strings.chat_unknownUserDefaultName);return this.$translate.instant(this.resources.strings.chat_provisioningInvalidUser,{displayName:t})},e.prototype.giveFileSharingPermissions=function(e,t){if(this.enableShareChatHistory&&this.settingsService.valueAsBoolean("chatFilePermissions"))if(e&&e.length&&t)if(this.chatHistoryOption!==this.chatHistoryOptionNo){this.loggingService.newScenario(this.constants.scenarios.files.giveFileSharePermissions,null,null,this.constants.timeInMiliseconds.minute).eventData={source:void 0,destination:void 0,entryPoint:void 0,context:void 0,numberOfSuccesses:0,numberOfCanceled:0,numberOfIncompletes:0,numberOfFailures:0,numberOfFiles:0,numberOfRecipients:0};var s;this.isInvalidChatHistoryOptionSelected()||(s=this.chatHistoryNumberOfDays);var i={recipientEmails:e,chatHistoryNumberOfDays:this.chatHistoryOption===this.chatHistoryOptionAll?this.constants.p2p.chatHistoryIncludeAllDays:s,context:{listenerId:this.p2pListenerRegistration.getId(),threadId:t,serviceName:this.constants.files.serviceName.p2p,provider:this.filesProviderFactory.create(teamspace.services.files.FilesProviderType.Search)}};this.filesActions.shareFiles(i)}else this.logger.info("No files to share - sharing option selected is none");else this.logger.error("Cannot giveFileSharingPermissions, missing param for recipientEmails or conversationId")},e.prototype.tabAndEnterKeyHandler=function(){var e=$(".cke_editable:visible");e&&e.focus()},e.prototype.closeAddMembersDialog=function(){this.dialogService.close(this.constants.dialogs.createChat,!0)},e.prototype.focusInEditorOnAdd=function(){this.eventingService.$emit(this.constants.events.messages.focusInMessageEditorOnAdd,!0)},e.prototype.defaultKeyHandler=function(e){switch(e.keyCode){case this.constants.keyCodes.enter:if(!this.isAddButtonDisabled()&&this.existingChatRecipients&&this.existingChatRecipients.length>0){this.addMembersToChat();break}case this.constants.keyCodes.tab:if(!e.shiftKey&&!e.ctrlKey&&!e.altKey){this.tabAndEnterKeyHandler();break}default:return!1}return!0},e.prototype.updateBotSearchEnabled=function(){this.existingChatRecipients.length>=1||this.enableBlockBotInNewGroupChat&&this.selectedRecipients&&this.selectedRecipients.length>=1?this.isBotSearchEnabled=!1:this.isBotSearchEnabled=!0},e.prototype.reevaluateBotSearchEnabled=function(){this.isBotSearchEnabled=!this.newChatService.showGroupNameLine},e.prototype.setPlaceholder=function(){if(this.rlPpInputTitle===this.$translate.instant(this.resources.strings.chatRecipientGroupUpdate_creationStep1Title))this.newPlaceholder=this.$translate.instant(this.resources.strings.chats_addRecipients_inputPlaceholder);else{var e=this.newChatService.showGroupNameLine?this.resources.strings.chats_addRecipients_inputPlaceholder:this.resources.strings.chats_addToRecipients_inputPlaceholder_allowGroups;this.newPlaceholder=this.$translate.instant(e)}},e.prototype.resetRecipients=function(){this.existingChatRecipients=[],this.selectedRecipients=[],this.updateDialogState()},e.prototype.setCustomOptionAriaInfo=function(e){if(e&&e.target){var t=void 0;t=this.isInvalidChatHistoryOption?this.$translate.instant(this.resources.strings.chat_history_include_chat_history_from_x_days_invalid_narration):this.$translate.instant(this.resources.strings.chat_history_include_chat_history_from_x_days_narration_mf,{numberOfDays:this.chatHistoryNumberOfDays},this.constants.translation.interpolationIds.messageformat),e.target.setAttribute("aria-label",t)}},e.prototype.isEdgeBrowser=function(){return this.platformDetectService.getBrowser()==this.constants.browser.edge},e.prototype.keyupHandler=function(e){e&&e.target&&this.isEdgeBrowser()&&(e.which!==this.constants.keyCodes.down&&e.which!==this.constants.keyCodes.up||(this.chatHistoryNumberOfDays=_.parseInt(e.target.value),this.validateChatHistoryValue()))},e}();t.ChatPeoplePickerController=r,angular.module("teamspace.chatPeoplePicker",["pascalprecht.translate","teamspace.loggingService","teamspace.peopleService","teamspace.newChatService","teamspace.services.files.modules.p2p.p2pFilesStore","teamspace.services.actions.files.filesActionsFactory","teamspace.services.files.filesProviderFactory","teamspace.routeUtilityService","teamspace.platformDetectService"]).directive("chatPeoplePicker",function(){return{restrict:"E",scope:{},controllerAs:"cppCtrl",bindToController:{id:"@",existingChatRecipients:"=?",otherChatRecipient:"=?",focusOnInit:"=?",onBegin:"&",onProgress:"&",onError:"&",registerFocusCallback:"&",onFocusCallback:"&",onDisableComposeCallback:"&",ariaLabelledby:"@?",rlPpInputTitle:"@?",isChatScenario:"=?",peoplePickerFiltersForInitialSearch:"@?",peoplePickerFiltersForSubsequentSearch:"@?",ppAccRole:"@?",hideShareHistoryOptions:"=?",allSelectedRecipientsMris:"=",isExternalSearchEnabled:"<?"},template:i,controller:r}})},1841:function(e,t){e.exports='<div class="ts-chat-people-picker">\n  <div class="ts-add-members">\n    <div class="ts-select-people">\n      <recipient-line class="ts-teammates" recipients="cppCtrl.selectedRecipients" is-chat-scenario="true" message-context="cppCtrl.chatFilter" default-key-handler="cppCtrl.defaultKeyHandler(event)" picker-usage-area="{{::cppCtrl.constants.user.clientFeedback.scenarioName.newChatPicker}}" is-esc-disabled="cppCtrl.isEscDisabled" is-bot-search-enabled="cppCtrl.isBotSearchEnabled" on-add="cppCtrl.updateDialogState()" on-remove="cppCtrl.updateDialogState()" aria-labelledby="{{::cppCtrl.ariaLabelledby}}" pp-input-title="{{::cppCtrl.rlPpInputTitle}}" placeholder="{{cppCtrl.newPlaceholder}}" people-picker-filters-for-initial-search="{{cppCtrl.peoplePickerFiltersForInitialSearch}}" people-picker-filters-for-subsequent-search="{{cppCtrl.peoplePickerFiltersForSubsequentSearch}}" pp-acc-role="{{::cppCtrl.ppAccRole}}" is-external-search-enabled="cppCtrl.isExternalSearchEnabled">\n      </recipient-line>\n    </div>\n    <div class="ts-chat-people-picker-error" ng-show="cppCtrl.hasReachedMaxNumOfRecipients || cppCtrl.hasBotInGroupChat || (cppCtrl.chatHistoryOption === cppCtrl.chatHistoryOptionCustom && cppCtrl.isInvalidChatHistoryOption)">\n      <div ng-show="cppCtrl.hasReachedMaxNumOfRecipients && !cppCtrl.hasBotInGroupChat && !(cppCtrl.isInvalidChatHistoryOption)" aria-label="{{::cppCtrl.maxRosterSizeError}}">{{::cppCtrl.maxRosterSizeError}}</div>\n      <div translate-once="{{::$root.resources.strings.chat_botAddedToGroupChatError}}" aria-label="{{::$root.resources.strings.chat_botAddedToGroupChatError|translate}}" ng-show="cppCtrl.hasBotInGroupChat"></div>\n      <div translate-once="{{::$root.resources.strings.chat_invalidChatHistoryOptionSelectedError}}" aria-label="{{::cppCtrl.invalidChatHistoryOptionSelectedError}}" ng-show="cppCtrl.isInvalidChatHistoryOption"></div>\n    </div>\n\n    <div ng-if="cppCtrl.enableShareChatHistory" class="share-chat-history-container" acc-role="radio-group">\n      <div class="share-chat-history-item" ng-click="cppCtrl.setChatHistoryFocusAndValue(cppCtrl.chatHistoryOptionNo)">\n        <input class="share-chat-history-radio" type="radio" acc-role="radio" name="chatHistoryOption" id="chat-history-option-no" ng-model="cppCtrl.chatHistoryOption" ng-value="cppCtrl.chatHistoryOptionNo">\n        <ng-include class="unselected-icon icon" src="\'svg/icons-radiobox-unselected.html\'"></ng-include>\n        <ng-include class="selected-icon icon" src="\'svg/icons-radiobox-selected.html\'"></ng-include>\n        <label class="share-chat-history-name" for="chat-history-option-no">\n          {{::$root.resources.strings.chat_history_dont_include_chat_history|translate}}\n        </label>\n      </div>\n\n      <div class="share-chat-history-item" ng-click="cppCtrl.setChatHistoryFocusAndValue(cppCtrl.chatHistoryOptionCustom, $event)">\n        <input class="share-chat-history-radio" type="radio" acc-role="radio" name="chatHistoryOption" id="chat-history-option-custom" ng-model="cppCtrl.chatHistoryOption" ng-value="cppCtrl.chatHistoryOptionCustom" ng-focus="cppCtrl.setCustomOptionAriaInfo($event)">\n        <ng-include class="unselected-icon icon" src="\'svg/icons-radiobox-unselected.html\'"></ng-include>\n        <ng-include class="selected-icon icon" src="\'svg/icons-radiobox-selected.html\'"></ng-include>\n        <label class="share-chat-history-name" for="chat-history-option-custom">\n          {{::$root.resources.strings.chat_history_include_chat_history_from_x_days|translate}}\n          \x3c!--\n            This input element must be disabled if the custom option is not\n            picked so that you do not hit it when using Tab in keyboard mode\n          --\x3e\n          <input sanitized class="number-days" type="number" min="{{::cppCtrl.minSharedNumberDays}}" aria-valuemin="{{::cppCtrl.minSharedNumberDays}}" max="{{::cppCtrl.maxSharedNumberDays}}" aria-valuemax="{{::cppCtrl.maxSharedNumberDays}}" value="{{cppCtrl.chatHistoryNumberOfDays}}" aria-valuenow="{{cppCtrl.chatHistoryNumberOfDays}}" ng-model="cppCtrl.chatHistoryNumberOfDays" ng-click="cppCtrl.chatCustomDaysInputClicked($event)" ng-change="cppCtrl.validateChatHistoryValue()" ng-keyup="cppCtrl.keyupHandler($event)" ng-disabled="cppCtrl.chatHistoryOption !== cppCtrl.chatHistoryOptionCustom" aria-label="{{::cppCtrl.chatHistoryCustomInputNarration}}"/>\n        </label>\n      </div>\n\n      <div class="share-chat-history-item" ng-click="cppCtrl.setChatHistoryFocusAndValue(cppCtrl.chatHistoryOptionAll)">\n        <input class="share-chat-history-radio" type="radio" acc-role="radio" name="chatHistoryOption" id="chat-history-option-all" ng-model="cppCtrl.chatHistoryOption" ng-value="cppCtrl.chatHistoryOptionAll">\n        <ng-include class="unselected-icon icon" src="\'svg/icons-radiobox-unselected.html\'"></ng-include>\n        <ng-include class="selected-icon icon" src="\'svg/icons-radiobox-selected.html\'"></ng-include>\n        <label class="share-chat-history-name" for="chat-history-option-all">\n          {{::$root.resources.strings.chat_history_include_chat_history|translate}}\n        </label>\n      </div>\n    </div>\n\n    <div class="ts-chat-people-picker-banner app-notification-banner tab-notification-banner warning-error-banner" ng-class="{\'banner-show\': cppCtrl.disableCompose && cppCtrl.notifyChatDisabledMessage}">\n      {{cppCtrl.notifyChatDisabledMessage}}\n    </div>\n    <div>\n      <div ng-if="cppCtrl.existingChatRecipients.length > 0" class="ts-update-chat-line-separator ts-modal-dialog-footer-buttons-spacing">\n        <button class="ts-btn ts-btn-fluent ts-btn-fluent-secondary" ng-click="::cppCtrl.closeAddMembersDialog()" data-tid="addMembers-CancelButton" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.addChatCancel}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.chatCreation}}" track-name="{{::$root.trackConstants.trackModuleName.addChatCancel}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="Cancel add" translate-once="{{::$root.resources.strings.cancel}}"></button>\n        <button class="ts-btn ts-btn-fluent ts-btn-fluent-primary" ng-click="::cppCtrl.addMembersToChat()" data-tid="addMembers-AddButton" ng-disabled="cppCtrl.isAddButtonDisabled()" track-outcome="{{::$root.trackConstants.trackOutcome.submit}}" track-scenario="{{::$root.trackConstants.trackScenario.addChatConfirm}}" track-gesture="{{::$root.trackConstants.trackGesture.click}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.chatCreation}}" track-name="{{::$root.trackConstants.trackModuleName.addChatConfirm}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="Add people confirm" track-data="{ \'Sharing\': \'{{cppCtrl.chatHistoryOption}}\' === \'{{cppCtrl.chatHistoryOptionCustom}}\' ? \'days-{{cppCtrl.chatHistoryNumberOfDays}}\' : \'{{cppCtrl.chatHistoryOption}}\' }" translate-once="{{::$root.resources.strings.chats_addRecipientsButton}}"></button>\n      </div>\n    </div>\n  </div>\n</div>'}},[1839]);
//# sourceMappingURL=https://statics.teams.microsoft.com/hashedjs/lazy-ng1-mod-chat-people-picker-components.min.js-8c49a2f2.map